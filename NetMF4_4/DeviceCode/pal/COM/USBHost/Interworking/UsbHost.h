//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------


#ifndef _USBHOST_H_
#define _USBHOST_H_

#include <TinyCLR_Interop.h>
struct Library_UsbHost_Microsoft_SPOT_Hardware_UsbHost_UsbDevice
{
    static const int FIELD_STATIC__s_openStreams = 0;

    static const int FIELD__m_deviceIndex = 1;

    TINYCLR_NATIVE_DECLARE(GetString___STRING__I4);
    TINYCLR_NATIVE_DECLARE(ControlRequest___BOOLEAN__SZARRAY_U1__SZARRAY_U1);
    TINYCLR_NATIVE_DECLARE(get_Configuration___MicrosoftSPOTHardwareUsbMicrosoftSPOTHardwareUsbClientConfiguration);
    TINYCLR_NATIVE_DECLARE(get_Count___STATIC__I4);

    //--//

};

struct Library_UsbHost_Microsoft_SPOT_Hardware_UsbHost_UsbPort
{
    static const int FIELD_STATIC__s_ports = 1;
    static const int FIELD_STATIC__s_device = 2;

    static const int FIELD__m_portIndex = 1;

    TINYCLR_NATIVE_DECLARE(get_Status___MicrosoftSPOTHardwareUsbMicrosoftSPOTHardwareUsbClientUsbControllerPortState);
    TINYCLR_NATIVE_DECLARE(nativeStart___BOOLEAN);
    TINYCLR_NATIVE_DECLARE(nativeStop___BOOLEAN);

    //--//

};

struct Library_UsbHost_Microsoft_SPOT_Hardware_UsbHost_UsbStream
{
    static const int FIELD__m_disposed = 1;
    static const int FIELD__m_streamIndex = 2;
    static const int FIELD__m_deviceIndex = 3;
    static const int FIELD__WriteEndpoint = 4;
    static const int FIELD__ReadEndpoint = 5;

    TINYCLR_NATIVE_DECLARE(nativeOpen___I4__I4__I4);
    TINYCLR_NATIVE_DECLARE(nativeClose___VOID);
    TINYCLR_NATIVE_DECLARE(nativeRead___I4__SZARRAY_U1__I4__I4);
    TINYCLR_NATIVE_DECLARE(nativeWrite___I4__SZARRAY_U1__I4__I4);
    TINYCLR_NATIVE_DECLARE(nativeFlush___VOID);

    //--//

};



extern const CLR_RT_NativeAssemblyData g_CLR_AssemblyNative_UsbHost;

#endif  //_USBHOST_H_
